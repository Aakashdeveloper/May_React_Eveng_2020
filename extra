Basic JavaScript
Npm

React = 3
React_hooks -1
React-Redux =2
React-Saga -1
React-GarphQL 1
React-JWT(Login Logut)-1
Basic React Native=1
----------------------
Testing

Depolyment
-> MERN
-> Docker
-> Nginx

Mock API
json-server

Github

--------NOT--------------
API
GarphQL
Login/Logout

///Next Topic///
> mock Api


///////////////
    React
//////////////
Single Page Application
Virtual DOM 
 
Node-Server

NPM(Node Package Manager)
Open Source Scripting 

Package.json> Meta data

JavaScript Object Notation
[
    {
        name:"John",
        class:"UI"
    },
    {
        name:"Ammy",
        class:"React"
    }
]


////////////////
Step to create package.json
////////////////

**Node.Js must be install in system
> Navigate to folder where you create Package.json using cmd/terminal
> npm init
> Answer all Question
> type "yes"

//////////
Local > Local to folder
> Navigate to folder  using cmd/terminal
> npm i packagename

////////////
Global (package to setup Application)

#window
> Run cmd as admin
> npm i -g packagename

#Mac/linux
> Open terminal
> sudo npm i -g packagename


///////////////////////////
Setup React App
///////////////////
#window
------OneTime-----
> Run cmd as admin
> npm i -g create-react-app

> Navigate to folder where you create APP using cmd/terminal
> create-react-app appname
> cd appname
> npm start
> localhost:3000


------OneTime-----
#Mac/linux
> Open terminal
> sudo npm i -g create-react-app

> Navigate to folder where you create APP using cmd/terminal
> create-react-app appname
> cd appname
> npm start
> localhost:3000



ClassBase Functional Hooks
State & Props

ClassBase               Functional
Logical                 Dumb Component
Heavy                   Ligth In weight
Statefull               Stateless Component
Can Handle State        Cannot Handle State


State & Props

State act like a local variable
Props is a wayy to transfer the data

CompA     ===>        CompB
State=5   props       State

id
class
tagname

In JavaScript
Map
Filter
indexof

var a = [0,1,2,3]
a.map((data) => { return data*2})
a.filter((data) => { return data*2})

var a = [0,1,2,3]
a.map((data) => { return data*2})
(4) [0, 2, 4, 6]
a.filter((data) => { return data*2})
(3) [1, 2, 3]

var age = [34,23,56,12,33]
age.filter((data) =>{ return data>25})
[34,56,33]


parent=>child(props)
child=>parent(propswithcallback)


function add(a){
    return a+a
}


add(1)


npm i -g json-server
json-server --watch db.json --port 8900